{"ast":null,"code":"var _class;\nimport { v4 as uuid } from 'uuid';\nimport * as i0 from \"@angular/core\";\nexport class DbzService {\n  constructor() {\n    this.characters = [{\n      id: uuid(),\n      name: 'Krillin',\n      power: 1000\n    }, {\n      id: uuid(),\n      name: 'Goku',\n      power: 9500\n    }, {\n      id: uuid(),\n      name: 'Vegeta',\n      power: 7500\n    }];\n  }\n  addCharacter(character) {\n    const newCharacter = {\n      id: uuid(),\n      ...character\n    };\n    this.characters.push(newCharacter);\n  }\n  // onDeleteCharacter( index:number ) {\n  // this.characters.splice(index,1);\n  deleteCharacterById(id) {\n    this.characters = this.characters.filter(character => character.id !== id);\n  }\n}\n_class = DbzService;\n_class.ɵfac = function DbzService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";AACA,SAASA,EAAE,IAAIC,IAAI,QAAQ,MAAM;;AAQjC,OAAM,MAAOC,UAAU;EAHvBC;IAKS,eAAU,GAAgB,CAAC;MAChCC,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,SAAS;MACfC,KAAK,EAAE;KACR,EAAC;MACAF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,MAAM;MACZC,KAAK,EAAE;KACR,EAAC;MACAF,EAAE,EAAEH,IAAI,EAAE;MACVI,IAAI,EAAE,QAAQ;MACdC,KAAK,EAAE;KACR,CAAC;;EAGFC,YAAY,CAAEC,SAAoB;IAEhC,MAAMC,YAAY,GAAc;MAAEL,EAAE,EAAEH,IAAI,EAAE;MAAE,GAAGO;IAAS,CAAE;IAE5D,IAAI,CAACE,UAAU,CAACC,IAAI,CAACF,YAAY,CAAC;EACpC;EAEA;EACA;EACAG,mBAAmB,CAAER,EAAS;IAC5B,IAAI,CAACM,UAAU,GAAG,IAAI,CAACA,UAAU,CAACG,MAAM,CAAEL,SAAS,IAAIA,SAAS,CAACJ,EAAE,KAAKA,EAAE,CAAE;EAC9E;;SA5BWF,UAAU;;mBAAVA,MAAU;AAAA;;SAAVA,MAAU;EAAAY,SAAVZ,MAAU;EAAAa,YAFT;AAAM","names":["v4","uuid","DbzService","constructor","id","name","power","addCharacter","character","newCharacter","characters","push","deleteCharacterById","filter","factory","providedIn"],"sourceRoot":"","sources":["/home/kira/Documents/Udemy/Angular/Heroes/src/app/dbz/services/dbz.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { v4 as uuid } from 'uuid';\n\n\nimport { Character } from '../interfaces/character.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DbzService {\n\n  public characters: Character[] = [{\n    id: uuid(),\n    name: 'Krillin',\n    power: 1000\n  },{\n    id: uuid(),\n    name: 'Goku',\n    power: 9500\n  },{\n    id: uuid(),\n    name: 'Vegeta',\n    power: 7500\n  }];\n\n\n  addCharacter( character: Character ):void {\n\n    const newCharacter: Character = { id: uuid(), ...character };\n\n    this.characters.push(newCharacter);\n  }\n\n  // onDeleteCharacter( index:number ) {\n  // this.characters.splice(index,1);\n  deleteCharacterById( id:string ) {\n    this.characters = this.characters.filter( character => character.id !== id );\n  }\n\n\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}